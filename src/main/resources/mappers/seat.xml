<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Gosk.GoskProject20221221.repository.SeatRepository">

    <resultMap id="seat" type="com.Gosk.GoskProject20221221.domain.seat.Seat">
        <result property="seat_id" column="seat_id"></result>
        <result property="user_id" column="user_id"></result>
        <result property="seat_start_time" column="seat_start_time"></result>
        <result property="seat_total_time" column="seat_total_time"></result>
    </resultMap>

    <resultMap id="reservedSeat" type="com.Gosk.GoskProject20221221.domain.seat.ReservedSeat">
        <result property="reserved_seat_id" column="reserved_seat_id"></result>
        <result property="user_id" column="user_id"></result>
        <result property="reserved_start_time" column="reserved_start_time"></result>
        <result property="reserved_total_time" column="reserved_total_time"></result>
    </resultMap>

    <resultMap id="user_mst" type="com.Gosk.GoskProject20221221.domain.user.User">
        <result property="user_id" column="user_id"></result>
        <result property="user_phone" column="user_phone"></result>
        <result property="user_date" column="user_date"></result>
        <result property="user_time" column="user_time"></result>
    </resultMap>

<!--    일반석(원데이) 결제 데이터 보내기    -->
    <insert id="paySeat" parameterType="com.Gosk.GoskProject20221221.domain.seat.Seat">
        INSERT INTO
            seat_mst(
                seat_id,
                user_id,
                seat_start_time,
                seat_total_time
        )

        VALUES (
            #{seat_id},
            #{user_id},
            DATE_ADD(NOW(), INTERVAL 9 HOUR),
            DATE_ADD((DATE_ADD(NOW(), INTERVAL 9 HOUR)), INTERVAL (#{seat_total_time}) HOUR)
        )
    </insert>

<!--    지정석(기간권) 데이터 보내기    -->
    <insert id="payReserved" parameterType="com.Gosk.GoskProject20221221.domain.seat.ReservedSeat">
        INSERT INTO
            reserved_seat_mst(
                reserved_seat_id,
                user_id,
                reserved_start_time,
                reserved_total_time
        )

        VALUES(
            #{reserved_seat_id},
            #{user_id},
            DATE_ADD(NOW(), INTERVAL 9 HOUR),
            DATE_ADD((DATE_ADD(NOW(), INTERVAL 9 HOUR)), INTERVAL #{reserved_total_time} DAY)
        )
    </insert>

<!--    일반석 정보 불러오기    -->
    <select id="seatSelect" resultType="com.Gosk.GoskProject20221221.domain.seat.Seat">
        SELECT
            seat_id,
            user_id
        FROM
            seat_mst

    </select>

<!--    지정석 정보 불러오기    -->
    <select id="reservedSelect" resultType="com.Gosk.GoskProject20221221.domain.seat.ReservedSeat">
        SELECT
            reserved_seat_id,
            user_id
        FROM
            reserved_seat_mst
    </select>

    <insert id="payLocker">
        insert into
            locker_mst
        values
        (
            #{locker_id},
            #{user_id},
            DATE_ADD(NOW(), interval 9 HOUR),
            DATE_ADD((DATE_ADD(NOW(), interval 9 HOUR)), INTERVAL #{locker_end_time} DAY)
        )
    </insert>




    <select id="getBasicSeatDetail" resultType="com.Gosk.GoskProject20221221.domain.seat.SeatInfo">
        SELECT
            sm.user_id,
            sm.seat_total_time,
            um.user_phone,
            um.user_time,
            um.user_date
        FROM
            seat_mst sm
            left outer join user_mst um on(um.user_id = sm.user_id)
        where
            seat_id = #{seatId}

    </select>

    <select id="getSpecialSeatDetail" resultType="com.Gosk.GoskProject20221221.domain.seat.SpecialSeatInfo">
    select
        rm.user_id,
        rm.reserved_total_time,
        um.user_phone
    from
        reserved_seat_mst rm
        left outer join user_mst um on(um.user_id = rm.user_id)
    where
        reserved_seat_id = #{seatId}

    </select>

    <update id="updateLocker">
        update
            receipt_mst rm
            INNER JOIN locker_mst lm ON(lm.user_id = rm.user_id)
        set
            rm.receipt_use = 0
        where
            <![CDATA[lm.locker_end_time < #{now}]]>

        ;
        UPDATE
            locker_mst lm
            INNER JOIN receipt_mst rm ON(rm.user_id = lm.user_id)
        SET
            lm.user_id = 0
        WHERE
            rm.receipt_use = 0 and
            rm.receipt_kinds = "사물함";

    </update>

    <update id="updateCommutation">
        update
            user_mst
        set
            user_time = null,
            user_date = null
        where
            <![CDATA[user_date < #{now}]]>
        ;
        UPDATE
            receipt_mst rm
            inner join seat_mst sm ON (rm.user_id = sm.user_id)
        SET
            receipt_use = 0
        WHERE
            rm.user_id = sm.user_id and
            rm.receipt_kinds = "정액권"
        ;
        update
            seat_mst sm
            inner join user_mst um ON (um.user_id = sm.user_id)
        set
            sm.user_id = 0
        where
            sm.user_id = um.user_id and
            sm.seat_total_time is null
        ;

    </update>

    <update id="updateUserDate">
        update
            user_mst
        set
            user_date = null
        where
            <![CDATA[user_date < #{now}]]>
    </update>

    <update id="updateOneday">
        update
            seat_mst
        set
            user_id = 0
        where
            <![CDATA[seat_total_time < #{now}]]>
    </update>

    <update id="closingDelete">
        UPDATE
            receipt_mst rm
            inner join seat_mst sm ON (rm.user_id = sm.user_id)
        SET
            receipt_use = 0
        WHERE
            rm.user_id in (
                            select
                                user_id
                            from
                                seat_mst sm
                            where
                                sm.seat_total_time IS NOT null
                            )and
            rm.receipt_kinds = "원데이";
    </update>

    <delete id="deleteReserve">
        DELETE from
            reserved_seat_mst
        WHERE
            <![CDATA[reserved_total_time < #{now}]]>
    </delete>


    <update id="forcedExitReserve" parameterType="java.util.List">
        update
            receipt_mst
        set
            receipt_use = 0
        where
            <foreach collection="list" item="item" separator="or">
                (user_id = (
                            select
                                user_id
                            from
                                reserved_seat_mst
                            where
                                reserved_seat_id = #{item}
                            );
                )
            </foreach>

        update
            reserved_seat_mst
        set
            user_id = 0
        where
            <foreach collection="list" item="item" separator="or">
                (reserved_seat_id = #{item})
            </foreach>

    </update>


    <update id="forcedExitLocker" parameterType="java.util.List">
        update
            receipt_mst
        set
            receipt_use = 0
        where
            <foreach collection="list" item="item" separator="or">
                (user_id = (
                            select
                                user_id
                            FROM
                                locker_mst
                            WHERE
                                locker_id = #{item}
                            )
                )
            </foreach>;
        update
            locker_mst
        set
            user_id = 0
        where
            <foreach collection="list" item="item" separator="or">
                (locker_id = #{item})
            </foreach>
    </update>


    <update id="forcedExitSeat" parameterType="java.util.List">
        UPDATE
            user_mst
        SET
            user_time = null,
            user_date = null
        where
            <foreach collection="list" item="item" separator="or">
                (user_id = (
                            select
                                user_id
                            FROM
                                seat_mst
                            WHERE
                                seat_id = #{item}
                            )
                )
            </foreach>
            ;
        update
            receipt_mst
        set
            receipt_use = 0
        where
            <foreach collection="list" item="item" separator="or">
                (user_id = (
                            select
                                user_id
                            FROM
                                seat_mst
                            WHERE
                                seat_id = #{item}
                            )
                )
            </foreach>
        ;
        update
            seat_mst
        where
            <foreach collection="list" item="item" separator="or">
                (seat_id = #{item})
            </foreach>

    </update>

    <delete id="delete0Seat">
        delete from
            seat_mst
        where
            user_id = 0
    </delete>

    <delete id="delete0Reserve">
        delete from
            reserved_seat_mst
        where
            user_id = 0
    </delete>

    <delete id="delete0Locker">
        delete from
            locker_mst
        where
            user_id = 0
    </delete>
</mapper>
